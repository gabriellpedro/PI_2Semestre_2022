CREATE DATABASE livraria

use livraria


create table livro(
id_livro INT AUTO_INCREMENT UNIQUE PRIMARY KEY NOT NULL,
isbn10 VARCHAR(80) UNIQUE,
isbn13 VARCHAR(80) UNIQUE,
genero varchar(15),
editora varchar(30),
nome varchar(40),
autor varchar(40),
paginas int
);


create table usuario(
cpf int(11) unique primary key,
tipo_usuario varchar(15),
nome varchar(40),
endereco varchar(40),
cep int,
contato int,
email varchar(50)
);



create table livro_usuario(
id_controle int auto_increment primary key,
data_emprestimo date,
data_devolucao date,
id_livro int,
cpf int(11),
foreign key (id_livro) references livro(id_livro),
foreign key (cpf) references usuario(cpf)
);


CREATE TABLE donation(
	id int AUTO_INCREMENT UNIQUE PRIMARY KEY NOT NULL,
	isbn VARCHAR(80) NOT NULL UNIQUE,
	title VARCHAR(40) NOT NULL,
	city VARCHAR(30) NOT NULL,
	cep INT NOT NULL,
	phone VARCHAR(17) NOT NULL,
	email VARCHAR(50) NOT NULL,
	description TEXT(250) NOT NULL,
	category VARCHAR(30) NOT NULL,
	image CHAR NOT NULL,
	dateTime DATE NOT NULL,
	items JSON NOT NULL
);


CREATE TABLE login(
	id_usuario INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
	email VARCHAR(50) NOT NULL,
	password VARCHAR(20) NOT NULL
);



CREATE TABLE register(
	id_register INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
	user VARCHAR(20) NOT NULL,
	email VARCHAR(50) NOT NULL,
	password VARCHAR(20)
);

INSERT INTO register VALUES(1, 'teste', 'teste', 'teste');
INSERT INTO donation VALUES(1, 'teste-21321-adwdwa', 'teste', 'teste', 'teste', 'teste', 'dwadwadwadwad', 'uhwagduywagfd7ywagfdguytwagy',
'dwadwawa', 'F', '2022-01-10', '2');


CREATE VIEW vw_registro AS SELECT * FROM register;
CREATE VIEW vw_livros AS SELECT id, isbn, title, description, category FROM donation;

SELECT * FROM vw_livros
SELECT * FROM vw_registro

DROP VIEW vw_livros
DROP VIEW vw_registro

CREATE USER 'admin'@'localhost' IDENTIFIED BY 'boorbook';
GRANT ALL PRIVILEGES ON * . * TO 'admin'@'localhost' IDENTIFIED BY 'boorbook';


DELIMITER $$
CREATE OR REPLACE PROCEDURE View_User()
BEGIN
	SELECT 
		cpf AS CPF,
		nome AS Nome,
		tipo_usuario AS TipoUsuario,
		endereco AS Endereco,
		contato AS Contato,
		email AS Email
	FROM 
		usuario;
	END $$
DELIMITER ;
		
CALL View_User();


DELIMITER $$
CREATE OR REPLACE FUNCTION Atualiza_Senha(s VARCHAR(20)) RETURNS VARCHAR(20)
BEGIN
	DECLARE senha VARCHAR(20);
	DECLARE novasenha VARCHAR(20);
	
	UPDATE register
	SET PASSWORD = s;
	
	SET novasenha = senha;
	
	RETURN s;
END $$
DELIMITER ;

SELECT * FROM register
SELECT Atualiza_Senha('589487456856');


